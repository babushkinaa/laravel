Вопросы:
1) Написать код factory(App\Post::class, 10)->create(); чтобы автоматически наполнялись таблицы Категории, Пользователей и Тегов.

В проекте есть модели

//создаем класc для посева данных

    php artisan make:seeder PostTableSeeder

В папке database/seeds/PostTableSeeder.php - создается seeder PostTableSeeder.php

//создаем фабрики для заполнения данных

В /database/factories/UserFactory.php добавляем фабрики.

    $factory->define(App\User::class,'post', function (Faker $faker) {
        return [
            'name' => $faker->name,
            'email' => $faker->unique()->safeEmail,
            'password' => bcrypt('12345'), // secret
            'remember_token' => str_random(10),
        ];
    });

    $factory->define(App\Post::class,'post', function (Faker $faker) {
        return [
            'categories_id' => rand(1,9),
            'title' => $faker->title,
            'body' => $faker->text(),
        ];
    });


    $factory->define(App\Tag::class,'post', function (Faker $faker) {
        return [
            'tags' => $faker->randomElement([array(
                'tag1',
                'tag2',
                'tag3'
            )]),
        ];
    });

    $factory->define(App\Category::class,'post', function (Faker $faker) {
        return [
            'tags' => $faker->randomElement([array(
                'Category1',
                'Category2',
                'Category3'
            )]),
        ];
    });

// Заполняем автоматическую генерацию таблиц в /database/factories/UserFactory.php

    <?php

    use Illuminate\Database\Seeder;

    class PostTableSeeder extends Seeder
    {
        /**
         * Run the database seeds.
         *
         * @return void
         */
        public function run()
        {
            factory(App\User::class,'post',10)->create()->each(function ($user){            //создаем пользователя, each для использования связанных моделей
                $user->post->save(factory(App\Post::class,'post')->make());                 //создаем пост, добавляем связь с пользователем
                $user->post->category->save(factory(App\Category::class,'post')->make());   //создаем и добавляем посту категорию
                $user->post->tag->attache(factory(App\Tag::class,'post'));                  //создаем и добавляем посту теги
            });
        }
    }

Для запуска команды php artisan DB:seed прописываем в методе run() в seeder DatabaseSeeder.php

    $this->call(PostTableSeeder::class);

    <?php

    use App\CategoryModel;
    use Illuminate\Database\Seeder;
    use Illuminate\Support\Facades\DB;

    class DatabaseSeeder extends Seeder
    {
        /**
         * Seed the application's database.
         *
         * @return void
         */
        public function run()
        {
             $this->call(PostTableSeeder::class);
        }
    }


Теперь запускаем php artisan DB:seed



2) Добавить информацию со связями Много-ко-многим

Добавлено.

3) Добавить информацию о Обновлениях в Eloquent

Добавлено.

4) Чем отличается seed от factory?

Seeding - наполнение реальными данными таблиц проекта.
Factory - наполнение тестовыми данными таблиц проекта.


5) Почему в Laravel нет папки Models?

Не знаю почему в Laravel нет папки Models - до 5 версии она присутствовала. Скорее всего для удобства. Теперь для подключения нужной модели запись
для namespace стала короче. Раньше необходимо было указывать App\Models\Model, теперь можно указать App\Model Я создавая проект использовал команду
php artisan make:model Models/NameModel и подключал модель Use App\Models\Model

6) Что такое Service? И чем отличается от Model?

Сервис - это сервис провайдер помещенный в сервис контейнер который формируется при загрузке всего приложения. Так как сервис контейнер формируется при загрузке системы он
 доступен в любом месте приложения его можно вызывать через дополнительный сервис фасадов, который предоставляет доступ к методам сервиса как к статическим методам.

 Модель не загружается автоматически с приложением и создает экземпляры только в момент вызова, модель так же можно вызывать в любом месте приложения но для этого ее необходимо подключить
 для использования.

7) Какая главная ответственность Model?

Так как модель отвечает за данные и связывает их с таблицой в базе данных - основная ответственность работа с данными.

8) Где лучше всего писать валидацию?

Валидацию можно писать и в контроллере и в моделе, как я понял самое оптимальное место для валидации это конструктор модели.
Если мы говорим про midleware. Если валидация получаемых данных. То валидацию лучше использовать в методе обрабатывающим получаемые данные в самой моделе.

9) Зачем нужна колбек функция в Роутере если есть контроллер?

Честно я не знаю, ответ на этот вопрос в 13 твоем вопросе. Я пытался найти информацию по работе с callback функцией но ответа на этот вопрос у меня нет.
Я использовал эту функцию для дебага и эксперемента с различными методами которые я изучал. Скорее всего есть какой то сокральный смысл в этом - Рахим если ты сможешь это
пояснить я буду очень благодарен.

10) Какой самый главный Middleware? Как он называется, и какие фильтры применяет?

Скорее всего это Web - так как он обрабатывает все роуты. Обрабатыват куки, сессии, csrf.

Почему я считаю что это самый главный Middleware - потомучто он обрабатывает все маршруты в проекте. Если его удалить то не будет работать роутинг.
Так как в своей проверке он использует пространство имен  App\rotes где лежат все маршруты. Если мое предположение не верно то второй Middleware это "Auth"
он проверяет авторизован пользователь в системе или нет, разрешает проходить на нужный маршрут или необходимо вернуть пользователя на страницу авторизации.

11) Как работать с $_GET, $_POST, $_SESSION и другими глобальными массивами через Laravel?

"HTTP request" единый компонент для работы с глобальными массивами в ларавел.

Для $_GET, $_POST - для этих массивов мы можем работать через дополнительные методы (пример $request->All() - получаем весть массив, $_GET, $_POST
в зависимости от типа запроса.) Что бы работать с сесиями мы используем метод session() (пример $request->session()->all() - получаем весь массив $_SESSION)

12) Как работать с Авторизованным пользователем?(Да официально не проходили. Но если ответишь, засчитаю бонусный бал)

13) Чем в итоге является Laravel для тебя, после прохождения курса по PHP?

Просто находкой, я до этого много изучал различных подходов и фреймворков из последнего это YII2 но курсы которые я просматривал были сухие и основаны только на теории
Я человек практик, есть задача ее можно решить. Твой подход мне понятен и на примере создания сначала блокнота, а теперь галлереи я понимаю как и что делать. Раньше это было большой проблемой.
Так как у меня нет большой практики мои проекты это блокнот, и галерея которую мы создали - для меня это просто прорыв. Пока была пауза в обучении я успел почти доделать небольшой лендинг который меня попрасили сделать знакомые
http://spacerocketmining.com.swtest.ru/ он пока на техническом домене, я жду когда дадут нужную информацию для его наполнения.

Лично для меня это отличная возможность начать разрабатывать свои проекты !

Спасибо за курсы.



14) Когда нужно использовать csrf_token и csrf_field?

csrf_token - используется только для генерации 40 символьного токена, этот метод лучше использовать мета тегах приложения.
csrf_token - Генерирует скрытое поле для форм и его следует использовать при создании форм и обработки получаемой и отправляемой информации
в формах приложения.